{"version":3,"file":"beace5c523fbf4241ffd1561ba918299f8538c97-681229fb34b9188136f3.js","mappings":"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","sources":["webpack://@leonardodimarchi/my-personal-website/./node_modules/classnames/index.js","webpack://@leonardodimarchi/my-personal-website/../src/image-utils.ts","webpack://@leonardodimarchi/my-personal-website/../src/components/hooks.ts","webpack://@leonardodimarchi/my-personal-website/../src/components/picture.tsx","webpack://@leonardodimarchi/my-personal-website/../src/components/layout-wrapper.tsx","webpack://@leonardodimarchi/my-personal-website/../src/components/placeholder.tsx","webpack://@leonardodimarchi/my-personal-website/../src/components/main-image.tsx","webpack://@leonardodimarchi/my-personal-website/../src/components/gatsby-image.browser.tsx","webpack://@leonardodimarchi/my-personal-website/../src/components/gatsby-image.server.tsx","webpack://@leonardodimarchi/my-personal-website/../src/components/static-image.server.tsx","webpack://@leonardodimarchi/my-personal-website/../src/components/static-image.tsx","webpack://@leonardodimarchi/my-personal-website/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://@leonardodimarchi/my-personal-website/./src/components/Layout/Layout.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/Layout/Layout.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/Meta/Meta.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/Page/Page.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/Page/Page.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/Image/Image.tsx","webpack://@leonardodimarchi/my-personal-website/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Author/Author.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Author/Author.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/Icon/Icon.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/Icon/Icon.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Contacts/Contacts.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Contacts/Contacts.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Copyright/Copyright.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Copyright/Copyright.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Menu/Menu.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Menu/Menu.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Sidebar.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/Sidebar/Sidebar.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/ThemeSwitcher/ThemeSwitcher.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/ThemeSwitcher/ThemeSwitcher.tsx","webpack://@leonardodimarchi/my-personal-website/./src/constants/icons.ts","webpack://@leonardodimarchi/my-personal-website/./src/constants/pagination.ts","webpack://@leonardodimarchi/my-personal-website/./src/hooks/use-site-metadata.ts","webpack://@leonardodimarchi/my-personal-website/./src/hooks/Post/use-post-categories-list.ts","webpack://@leonardodimarchi/my-personal-website/./src/hooks/Project/use-project-categories-list.ts","webpack://@leonardodimarchi/my-personal-website/./src/hooks/Project/use-project-tags-list.ts","webpack://@leonardodimarchi/my-personal-website/./src/hooks/Post/use-post-tags-list.ts","webpack://@leonardodimarchi/my-personal-website/./node_modules/@alxshelepenok/diesel-extensions/target/diesel-extensions.es5.js","webpack://@leonardodimarchi/my-personal-website/./src/hooks/use-theme.ts","webpack://@leonardodimarchi/my-personal-website/./src/utils/get-icon.ts","webpack://@leonardodimarchi/my-personal-website/./src/utils/get-contact-href.ts","webpack://@leonardodimarchi/my-personal-website/./src/utils/to-kebab-case.ts","webpack://@leonardodimarchi/my-personal-website/./src/utils/get-default-color-mode.ts"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  var nativeCodeString = '[native code]';\n  function classNames() {\n    var classes = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n          classes.push(arg.toString());\n          continue;\n        }\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n    return classes.join(' ');\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React, { useEffect } from \"react\";\n\nimport { useTheme } from \"@/hooks\";\n\nimport * as styles from \"./Layout.module.scss\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst Layout: React.FC<Props> = ({ children }: Props) => {\n  const [{ mode }] = useTheme();\n\n  useEffect(() => {\n    document.documentElement.className = mode;\n  }, [mode]);\n\n  return <div className={styles.layout}>{children}</div>;\n};\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nexport var layout = \"Layout-module--layout--2c933\";","import React from \"react\";\n\ninterface Props {\n  description: string;\n  image?: string;\n  title: string;\n}\n\nconst Meta: React.FC<Props> = ({ description, title, image }: Props) => (\n  <>\n    <title>{title}</title>\n    <meta name=\"description\" content={description} />\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta name=\"twitter:title\" content={title} />\n    <meta name=\"twitter:description\" content={description} />\n    <meta name=\"og:title\" content={title} />\n    <meta name=\"og:type\" content=\"website\" />\n    <meta name=\"og:description\" content={description} />\n\n    {image ? (\n      <>\n        <meta name=\"image\" content={image} />\n        <meta name=\"og:image\" content={image} />\n        <meta name=\"twitter:image\" content={image} />\n      </>\n    ) : null}\n  </>\n);\n\nexport default Meta;\n","import React, { useEffect, useRef } from \"react\";\n\nimport type { Nullable } from \"@/types\";\n\nimport * as styles from \"./Page.module.scss\";\n\ninterface Props {\n  title?: string;\n  children: React.ReactNode;\n}\n\nconst Page: React.FC<Props> = ({ title, children }: Props) => {\n  const pageRef = useRef<Nullable<HTMLDivElement>>(null);\n\n  useEffect(() => {\n    if (pageRef.current) {\n      pageRef.current.scrollIntoView();\n    }\n  }, []);\n\n  return (\n    <div ref={pageRef} className={styles.page}>\n      <div className={styles.inner}>\n        {title && <h1 className={styles.title}>{title}</h1>}\n        <div className={styles.body}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n","// extracted by mini-css-extract-plugin\nexport var body = \"Page-module--body--561c4\";\nexport var inner = \"Page-module--inner--4b31d\";\nexport var page = \"Page-module--page--24e03\";\nexport var title = \"Page-module--title--90338\";","import React, { FC } from \"react\";\n\nimport { graphql, StaticQuery } from \"gatsby\";\nimport {\n  GatsbyImage,\n  GatsbyImageProps,\n  IGatsbyImageData,\n} from \"gatsby-plugin-image\";\nimport { FileSystemNode } from \"gatsby-source-filesystem\";\n\ninterface Props extends Omit<GatsbyImageProps, \"image\"> {\n  path: string;\n}\n\ninterface Data {\n  images: {\n    edges: Array<{\n      node: FileSystemNode & {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData;\n        };\n      };\n    }>;\n  };\n}\n\nconst Image: FC<Props> = ({ path, ...rest }: Props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile(\n          filter: { ext: { regex: \"/png|jpg|jpeg|webp|tif|tiff/\" } }\n        ) {\n          edges {\n            node {\n              absolutePath\n              childImageSharp {\n                gatsbyImageData(formats: [AUTO, WEBP, AVIF])\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data: Data) => {\n      const { images: { edges = [] } = {} } = data;\n      const image = edges.find(({ node }) => node.absolutePath.includes(path));\n\n      if (!image) {\n        return null;\n      }\n\n      const {\n        node: { childImageSharp },\n      } = image;\n\n      return <GatsbyImage {...rest} image={childImageSharp.gatsbyImageData} />;\n    }}\n  />\n);\n\nexport default Image;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport var author = \"Author-module--author--cbd31\";\nexport var link = \"Author-module--link--09c17\";\nexport var photo = \"Author-module--photo--9787b\";\nexport var subtitle = \"Author-module--subtitle--86ec5\";\nexport var title = \"Author-module--title--cf7e5\";\nexport var titleContainer = \"Author-module--titleContainer--4f576\";","import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport { Image } from \"@/components/Image\";\nimport { ThemeSwitcher } from \"@/components/ThemeSwitcher\";\n\nimport * as styles from \"./Author.module.scss\";\n\ntype Props = {\n  author: {\n    name: string;\n    bio: string;\n    photo: string;\n  };\n  isIndex?: boolean;\n};\n\nconst Author = ({ author, isIndex }: Props) => (\n  <div className={styles.author}>\n    <Link to=\"/\">\n      <Image alt={author.name} path={author.photo} className={styles.photo} />\n    </Link>\n\n    <div className={styles.titleContainer}>\n      {isIndex ? (\n        <h1 className={styles.title}>\n          <Link className={styles.link} to=\"/\">\n            {author.name}\n          </Link>\n        </h1>\n      ) : (\n        <h2 className={styles.title}>\n          <Link className={styles.link} to=\"/\">\n            {author.name}\n          </Link>\n        </h2>\n      )}\n      <ThemeSwitcher />\n    </div>\n    <p className={styles.subtitle}>{author.bio}</p>\n  </div>\n);\n\nexport default Author;\n","import React from \"react\";\n\nimport { ICONS } from \"@/constants\";\n\nimport * as styles from \"./Icon.module.scss\";\n\ninterface Props {\n  name: keyof typeof ICONS;\n  icon: {\n    viewBox?: string;\n    path?: string;\n  };\n}\n\nconst Icon: React.FC<Props> = ({ name, icon }: Props) => (\n  <svg className={styles.icon} viewBox={icon.viewBox}>\n    <title>{name}</title>\n    <path d={icon.path} />\n  </svg>\n);\n\nexport default Icon;\n","// extracted by mini-css-extract-plugin\nexport var icon = \"Icon-module--icon--1d7da\";","import React from \"react\";\n\nimport { Icon } from \"@/components/Icon\";\nimport { ICONS } from \"@/constants\";\nimport { Dictionary } from \"@/types\";\nimport { getContactHref, getIcon } from \"@/utils\";\n\nimport * as styles from \"./Contacts.module.scss\";\n\ntype Props = {\n  contacts: Dictionary<string>;\n};\n\nconst Contacts: React.FC<Props> = ({ contacts }: Props) => (\n  <div className={styles.contacts}>\n    <ul className={styles.list}>\n      {(Object.keys(contacts) as Array<keyof typeof ICONS>).map((name) =>\n        contacts[name] ? (\n          <li className={styles.item} key={name}>\n            {\n              <a\n                className={styles.link}\n                href={getContactHref(name, contacts[name])}\n                target=\"_blank\"\n                rel={`noopener noreferrer`}\n              >\n                <Icon name={name} icon={getIcon(name)} />\n              </a>\n            }\n          </li>\n        ) : null,\n      )}\n    </ul>\n  </div>\n);\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport var contacts = \"Contacts-module--contacts--09178\";\nexport var item = \"Contacts-module--item--f9cb0\";\nexport var link = \"Contacts-module--link--de1e0\";\nexport var list = \"Contacts-module--list--9670b\";","import React from \"react\";\n\nimport * as styles from \"./Copyright.module.scss\";\n\ntype Props = {\n  copyright: string;\n};\n\nconst Copyright = ({ copyright }: Props) => (\n  <div className={styles.copyright}>{copyright}</div>\n);\n\nexport default Copyright;\n","// extracted by mini-css-extract-plugin\nexport var copyright = \"Copyright-module--copyright--2c602\";","import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Menu.module.scss\";\n\ntype Props = {\n  menu: Array<{\n    label: string;\n    path: string;\n  }>;\n};\n\nconst Menu: React.FC<Props> = ({ menu }: Props) => (\n  <nav className={styles.menu}>\n    <ul className={styles.list}>\n      {menu.map((item) => (\n        <li className={styles.item} key={item.path}>\n          <Link\n            to={item.path}\n            className={styles.link}\n            activeClassName={styles.active}\n          >\n            {item.label}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </nav>\n);\n\nexport default Menu;\n","// extracted by mini-css-extract-plugin\nexport var active = \"Menu-module--active--6cb74\";\nexport var item = \"Menu-module--item--8b679\";\nexport var link = \"Menu-module--link--a6f02\";\nexport var list = \"Menu-module--list--e1ae3\";\nexport var menu = \"Menu-module--menu--113a9\";","import React from \"react\";\n\nimport { useSiteMetadata } from \"@/hooks\";\n\nimport { Author } from \"./Author\";\nimport { Contacts } from \"./Contacts\";\nimport { Copyright } from \"./Copyright\";\nimport { Menu } from \"./Menu\";\n\nimport * as styles from \"./Sidebar.module.scss\";\n\ntype Props = {\n  isIndex?: boolean;\n};\n\nconst Sidebar = ({ isIndex }: Props) => {\n  const { author, copyright, menu } = useSiteMetadata();\n\n  return (\n    <div className={styles.sidebar}>\n      <div className={styles.inner}>\n        <Author author={author} isIndex={isIndex} />\n        <Menu menu={menu} />\n        <Contacts contacts={author.contacts} />\n        <Copyright copyright={copyright} />\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","// extracted by mini-css-extract-plugin\nexport var inner = \"Sidebar-module--inner--344d0\";\nexport var sidebar = \"Sidebar-module--sidebar--1bfa1\";","// extracted by mini-css-extract-plugin\nexport var button = \"ThemeSwitcher-module--button--7cb7b\";\nexport var dark = \"ThemeSwitcher-module--dark--6db0c\";\nexport var moon = \"ThemeSwitcher-module--moon--10537\";\nexport var sun = \"ThemeSwitcher-module--sun--2163a\";\nexport var themeSwitcher = \"ThemeSwitcher-module--themeSwitcher--8a77f\";","import React, { useEffect, useState } from \"react\";\n\nimport cn from \"classnames\";\n\nimport { useTheme } from \"@/hooks\";\n\nimport * as styles from \"./ThemeSwitcher.module.scss\";\n\nconst ThemeSwitcher: React.FC = () => {\n  const [{ mode }, toggleTheme] = useTheme();\n  const [isClient, setIsClient] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsClient(typeof window !== \"undefined\");\n  }, []);\n\n  if (!isClient) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(styles.themeSwitcher, {\n        [styles.dark]: mode === \"dark\",\n      })}\n    >\n      <button className={styles.button} onClick={toggleTheme}>\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        >\n          <title>{mode}</title>\n          <path\n            pathLength=\"1\"\n            className={styles.moon}\n            d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"\n          />\n          <circle pathLength=\"1\" className={styles.sun} cx=\"12\" cy=\"12\" r=\"5\" />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"12\"\n            y1=\"1\"\n            x2=\"12\"\n            y2=\"3\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"12\"\n            y1=\"21\"\n            x2=\"12\"\n            y2=\"23\"\n          ></line>\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"4.22\"\n            y1=\"4.22\"\n            x2=\"5.64\"\n            y2=\"5.64\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"18.36\"\n            y1=\"18.36\"\n            x2=\"19.78\"\n            y2=\"19.78\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"1\"\n            y1=\"12\"\n            x2=\"3\"\n            y2=\"12\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"21\"\n            y1=\"12\"\n            x2=\"23\"\n            y2=\"12\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"4.22\"\n            y1=\"19.78\"\n            x2=\"5.64\"\n            y2=\"18.36\"\n          />\n          <line\n            pathLength=\"1\"\n            className={styles.sun}\n            x1=\"18.36\"\n            y1=\"5.64\"\n            x2=\"19.78\"\n            y2=\"4.22\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n","const ICONS = {\n  github: {\n    path: \"M10 19c0 1.141-0.594 3-2 3s-2-1.859-2-3 0.594-3 2-3 2 1.859 2 3zM20 19c0 1.141-0.594 3-2 3s-2-1.859-2-3 0.594-3 2-3 2 1.859 2 3zM22.5 19c0-2.391-1.453-4.5-4-4.5-1.031 0-2.016 0.187-3.047 0.328-0.812 0.125-1.625 0.172-2.453 0.172s-1.641-0.047-2.453-0.172c-1.016-0.141-2.016-0.328-3.047-0.328-2.547 0-4 2.109-4 4.5 0 4.781 4.375 5.516 8.188 5.516h2.625c3.813 0 8.188-0.734 8.188-5.516zM26 16.25c0 1.734-0.172 3.578-0.953 5.172-2.063 4.172-7.734 4.578-11.797 4.578-4.125 0-10.141-0.359-12.281-4.578-0.797-1.578-0.969-3.437-0.969-5.172 0-2.281 0.625-4.438 2.125-6.188-0.281-0.859-0.422-1.766-0.422-2.656 0-1.172 0.266-2.344 0.797-3.406 2.469 0 4.047 1.078 5.922 2.547 1.578-0.375 3.203-0.547 4.828-0.547 1.469 0 2.953 0.156 4.375 0.5 1.859-1.453 3.437-2.5 5.875-2.5 0.531 1.062 0.797 2.234 0.797 3.406 0 0.891-0.141 1.781-0.422 2.625 1.5 1.766 2.125 3.938 2.125 6.219z\",\n    viewBox: \"0 0 26 28\",\n  },\n  linkedin: {\n    path: \"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z\",\n    viewBox: \"0 0 24 24\",\n  },\n};\n\nexport default ICONS;\n","const PAGINATION = {\n  PREV_PAGE: \"← PREV\",\n  NEXT_PAGE: \"→ NEXT\",\n};\n\nexport default PAGINATION;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            author {\n              bio\n              name\n              photo\n              contacts {\n                github\n                linkedin\n              }\n            }\n            menu {\n              path\n              label\n            }\n            url\n            title\n            subtitle\n            copyright\n          }\n        }\n      }\n    `,\n  );\n\n  return site.siteMetadata;\n};\n\nexport default useSiteMetadata;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\ninterface PostCategoriesQueryResult {\n  allMarkdownRemark: {\n    group: Array<{\n      fieldValue: string;\n      totalCount: number;\n    }>;\n  };\n}\n\nconst usePostCategoriesList = () => {\n  const { allMarkdownRemark } = useStaticQuery<PostCategoriesQueryResult>(\n    graphql`\n      query PostCategoriesListQuery {\n        allMarkdownRemark(\n          filter: {\n            frontmatter: { template: { eq: \"post\" }, draft: { ne: true } }\n          }\n        ) {\n          group(field: frontmatter___category) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `,\n  );\n\n  return allMarkdownRemark.group ?? [];\n};\n\nexport default usePostCategoriesList;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\ninterface ProjectCategoriesQueryResult {\n  allMarkdownRemark: {\n    group: Array<{\n      fieldValue: string;\n      totalCount: number;\n    }>;\n  };\n}\n\nconst useProjectCategoriesList = () => {\n  const { allMarkdownRemark } = useStaticQuery<ProjectCategoriesQueryResult>(\n    graphql`\n      query ProjectCategoriesListQuery {\n        allMarkdownRemark(\n          filter: {\n            frontmatter: { template: { eq: \"project\" }, draft: { ne: true } }\n          }\n        ) {\n          group(field: frontmatter___category) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `,\n  );\n\n  return allMarkdownRemark.group ?? [];\n};\n\nexport default useProjectCategoriesList;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\ninterface ProjectTagsQueryResult {\n  allMarkdownRemark: {\n    group: Array<{\n      fieldValue: string;\n      totalCount: number;\n    }>;\n  };\n}\n\nconst useProjectTagsList = () => {\n  const { allMarkdownRemark } = useStaticQuery<ProjectTagsQueryResult>(\n    graphql`\n      query ProjectTagsListQuery {\n        allMarkdownRemark(\n          filter: {\n            frontmatter: { template: { eq: \"project\" }, draft: { ne: true } }\n          }\n        ) {\n          group(field: frontmatter___tags) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `,\n  );\n\n  return allMarkdownRemark.group || [];\n};\n\nexport default useProjectTagsList;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\ninterface PostTagsQueryResult {\n  allMarkdownRemark: {\n    group: Array<{\n      fieldValue: string;\n      totalCount: number;\n    }>;\n  };\n}\n\nconst usePostTagsList = () => {\n  const { allMarkdownRemark } = useStaticQuery<PostTagsQueryResult>(\n    graphql`\n      query PostTagsListQuery {\n        allMarkdownRemark(\n          filter: {\n            frontmatter: { template: { eq: \"post\" }, draft: { ne: true } }\n          }\n        ) {\n          group(field: frontmatter___tags) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `,\n  );\n\n  return allMarkdownRemark.group || [];\n};\n\nexport default usePostTagsList;\n","import _slicedToArray from \"/home/leonardo/Workspace/my-personal-website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useCoilState } from '@alxshelepenok/diesel';\nimport { useCallback, useState, useEffect, useRef, useLayoutEffect } from 'react';\nvar useIsomorphicLayoutEffect = typeof window === \"undefined\" ? useEffect : useLayoutEffect;\nfunction useEventListener(eventName, handler, element, options) {\n  var savedHandler = useRef(handler);\n  useIsomorphicLayoutEffect(function () {\n    savedHandler.current = handler;\n  }, [handler]);\n  useEffect(function () {\n    var _a;\n    var targetElement = (_a = element === null || element === void 0 ? void 0 : element.current) !== null && _a !== void 0 ? _a : window;\n    if (!(targetElement && targetElement.addEventListener)) return function () {};\n    var listener = function listener(event) {\n      return savedHandler.current(event);\n    };\n    targetElement.addEventListener(eventName, listener, options);\n    return function () {\n      targetElement.removeEventListener(eventName, listener, options);\n    };\n  }, [eventName, element, options]);\n}\nfunction useEventCallback(fn) {\n  var ref = useRef(function () {\n    throw new Error(\"cannot call an event handler while rendering\");\n  });\n  useIsomorphicLayoutEffect(function () {\n    ref.current = fn;\n  }, [fn]);\n  return useCallback(function () {\n    return ref.current.apply(ref, arguments);\n  }, [ref]);\n}\nvar parseJSON = function parseJSON(value) {\n  try {\n    return value === \"undefined\" ? undefined : JSON.parse(value !== null && value !== void 0 ? value : \"\");\n  } catch (_a) {\n    return undefined;\n  }\n};\nvar useLocalStorage = function useLocalStorage(key, initialValue) {\n  var readValue = useCallback(function () {\n    if (typeof window === \"undefined\") {\n      return initialValue;\n    }\n    try {\n      var item = window.localStorage.getItem(key);\n      return item ? parseJSON(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  }, [initialValue, key]);\n  var _useState = useState(readValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    storedValue = _useState2[0],\n    setStoredValue = _useState2[1];\n  var setValue = useEventCallback(function (value) {\n    try {\n      var newValue = value instanceof Function ? value(storedValue) : value;\n      window.localStorage.setItem(key, JSON.stringify(newValue));\n      setStoredValue(newValue);\n      window.dispatchEvent(new Event(\"local-storage\"));\n    } catch (error) {}\n  });\n  useEffect(function () {\n    setStoredValue(readValue());\n  }, []);\n  var handleStorageChange = useCallback(function (event) {\n    if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n      return;\n    }\n    setStoredValue(readValue());\n  }, [key, readValue]);\n  useEventListener(\"storage\", handleStorageChange);\n  useEventListener(\"local-storage\", handleStorageChange);\n  return [storedValue, setValue];\n};\nvar toKebabCase = function toKebabCase() {\n  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var _a;\n  return ((_a = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)) === null || _a === void 0 ? void 0 : _a.map(function (word) {\n    return word.toLowerCase();\n  }).join(\"-\")) || \"\";\n};\nvar useCoilPersistedState = function useCoilPersistedState(coilValue) {\n  var keyPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"diesel:\";\n  var _useCoilState = useCoilState(coilValue),\n    _useCoilState2 = _slicedToArray(_useCoilState, 2),\n    value = _useCoilState2[0],\n    setValue = _useCoilState2[1];\n  var _useLocalStorage = useLocalStorage(keyPrefix.concat(toKebabCase(coilValue.key)), value),\n    _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n    persistedValue = _useLocalStorage2[0],\n    setPersistedValue = _useLocalStorage2[1];\n  return [persistedValue, function (nextValue) {\n    setPersistedValue(nextValue);\n    return setValue(value);\n  }];\n};\nexport { useCoilPersistedState };","import { atom } from \"@alxshelepenok/diesel\";\nimport { useCoilPersistedState } from \"@alxshelepenok/diesel-extensions\";\n\nimport { getDefaultColorMode } from \"@/utils\";\n\ninterface Theme {\n  mode: \"dark\" | \"light\";\n}\n\nexport const themeAtomKey = \"diesel:theme-atom\";\n\nconst themeAtom = atom<Theme>({\n  key: \"themeAtom\",\n  default: {\n    mode: getDefaultColorMode(),\n  },\n});\n\nconst useTheme = (): readonly [Theme, () => void] => {\n  const [theme, set] = useCoilPersistedState(themeAtom);\n\n  const toggle = () => set({ mode: theme.mode === \"dark\" ? \"light\" : \"dark\" });\n\n  return [theme, toggle];\n};\n\nexport default useTheme;\n","import { ICONS } from \"@/constants\";\n\nconst getIcon = (name: keyof typeof ICONS) => ICONS[name] || {};\n\nexport default getIcon;\n","const getContactHref = (name: string, contact: string) => {\n  const hrefs: { [key: string]: string } = {\n    github: `https://github.com/${contact}`,\n    linkedin: `https://www.linkedin.com/in/${contact}`,\n  };\n\n  return hrefs[name] ?? contact;\n};\n\nexport default getContactHref;\n","const toKebabCase = (str: string = \"\"): string =>\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    ?.map((word) => word.toLowerCase())\n    .join(\"-\") || \"\";\n\nexport default toKebabCase;\n","const getDefaultColorMode = (): \"dark\" | \"light\" => {\n  if (typeof window === \"undefined\") {\n    return \"light\";\n  }\n\n  const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const hasMediaQueryPreference = typeof mql.matches !== \"undefined\";\n  if (hasMediaQueryPreference) {\n    return mql.matches ? \"dark\" : \"light\";\n  }\n\n  return \"light\";\n};\n\nexport default getDefaultColorMode;\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","height","format","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","src","a","children","props","Fragment","Sizer","t","srcSet","decoding","undefined","fallback","sizes","Image","map","media","type","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","e","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","warn","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","camelCase","input","options","TypeError","assign","pascalCase","x","trim","filter","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","mode","useTheme","document","documentElement","description","title","name","content","pageRef","scrollIntoView","path","source","excluded","target","sourceKeys","keys","indexOf","StaticQuery","query","render","data","_data$images","edges","find","node","absolutePath","childImageSharp","gatsbyImageData","author","isIndex","Link","to","photo","styles","ThemeSwitcher","bio","icon","viewBox","d","contacts","href","getContactHref","rel","Icon","getIcon","copyright","menu","item","activeClassName","label","useSiteMetadata","Author","Menu","Contacts","Copyright","sun","toggleTheme","useState","isClient","setIsClient","window","cn","onClick","fill","strokeWidth","strokeLinecap","strokeLinejoin","pathLength","cx","cy","r","x1","y1","x2","y2","github","linkedin","PREV_PAGE","NEXT_PAGE","useStaticQuery","site","siteMetadata","allMarkdownRemark","group","useIsomorphicLayoutEffect","useEventListener","eventName","handler","element","savedHandler","_a","targetElement","listener","event","useLocalStorage","initialValue","fn","readValue","useCallback","localStorage","getItem","value","parse","parseJSON","error","_useState","_useState2","storedValue","setStoredValue","setValue","newValue","Function","setItem","dispatchEvent","Event","handleStorageChange","toKebabCase","str","match","word","themeAtom","atom","getDefaultColorMode","coilValue","keyPrefix","_useCoilState","_useCoilState2","_useLocalStorage","concat","_useLocalStorage2","persistedValue","setPersistedValue","nextValue","useCoilPersistedState","theme","set","ICONS","contact","_str$match","mql","matchMedia","matches"],"sourceRoot":""}