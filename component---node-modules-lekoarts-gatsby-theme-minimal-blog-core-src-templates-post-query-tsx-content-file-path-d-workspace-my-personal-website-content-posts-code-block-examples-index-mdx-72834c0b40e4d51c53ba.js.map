{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-d-workspace-my-personal-website-content-posts-code-block-examples-index-mdx-72834c0b40e4d51c53ba.js","mappings":"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","sources":["webpack://@leonardodimarchi/my-personal-website/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://@leonardodimarchi/my-personal-website/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://@leonardodimarchi/my-personal-website/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://@leonardodimarchi/my-personal-website/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://@leonardodimarchi/my-personal-website/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://@leonardodimarchi/my-personal-website/./content/posts/code-block-examples/SpotifyPlayer.js","webpack://@leonardodimarchi/my-personal-website/./content/posts/code-block-examples/index.mdx","webpack://@leonardodimarchi/my-personal-website/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/* eslint react/no-unknown-property: 0 */\r\n/* eslint react/prefer-stateless-function: 0 */\r\n\r\n/**\r\n * Spotify player iframe widget\r\n *\r\n * @author Alexander Wallin <office@alexanderwallin.com>\r\n * @see https://developer.spotify.com/technologies/widgets/spotify-play-button/\r\n */\r\n\r\nimport * as React from \"react\"\r\n\r\n// Size presets, defined by Spotify\r\nconst sizePresets = {\r\n  large: {\r\n    width: 300,\r\n    height: 380,\r\n  },\r\n  compact: {\r\n    width: 300,\r\n    height: 80,\r\n  },\r\n}\r\n\r\nfunction SpotifyPlayer({ uri, view, theme, size }) {\r\n  return (\r\n    <iframe\r\n      title=\"Spotify\"\r\n      className=\"SpotifyPlayer\"\r\n      src={`https://embed.spotify.com/?uri=${uri}&view=${view}&theme=${theme}`}\r\n      width={sizePresets[size].width}\r\n      height={sizePresets[size].height}\r\n      frameBorder=\"0\"\r\n      allowtransparency=\"true\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default SpotifyPlayer\r\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport SpotifyPlayer from \"./SpotifyPlayer\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Here will a React component go:\"), \"\\n\", React.createElement(SpotifyPlayer, {\n    uri: \"spotify:user:bbcamerica:playlist:3w18u69NplCpXVG4fQG726\",\n    size: \"large\",\n    theme: \"black\",\n    view: \"list\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Here will a normal code block go:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"(function() {\\r\\n\\r\\nvar cache = {};\\r\\nvar form = $('form');\\r\\nvar minified = true;\\r\\n\\r\\nvar dependencies = {};\\r\\n\\r\\nvar treeURL = 'https://api.github.com/repos/PrismJS/prism/git/trees/gh-pages?recursive=1';\\r\\nvar treePromise = new Promise(function(resolve) {\\r\\n  $u.xhr({\\r\\n    url: treeURL,\\r\\n    callback: function(xhr) {\\r\\n      if (xhr.status < 400) {\\r\\n        resolve(JSON.parse(xhr.responseText).tree);\\r\\n      }\\r\\n    }\\r\\n  });\\r\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"A code block with a JSDoc comment, short, and long comment:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"/**\\r\\n * Get value out of string (e.g. rem => px)\\r\\n * If value is px strip the px part\\r\\n * If the input is already a number only return that value\\r\\n * @param {string | number} input\\r\\n * @param {number} [rootFontSize]\\r\\n * @return {number} Number without last three characters\\r\\n * @example removeLastThree('6rem') => 6\\r\\n */\\r\\nconst getValue = (input, rootFontSize = 16) => {\\r\\n  if (typeof input === `number`) {\\r\\n    return input / rootFontSize;\\r\\n  }\\r\\n\\r\\n  const isPxValue = input.slice(-2) === `px`;\\r\\n\\r\\n  if (isPxValue) {\\r\\n    return parseFloat(input.slice(0, -2));\\r\\n  }\\r\\n\\r\\n  return parseFloat(input.slice(0, -3));\\r\\n};\\r\\n\\r\\n// This is a little helper function\\r\\nconst helper = (a, b) => a + b;\\r\\n\\r\\n// This is also a little helper function but this time with a really long one-line comment that should show some more details\\r\\nconst morehelper = (a, b) => a * b;\\r\\n\\r\\nexport { getValue, helper, morehelper };\\n\")), \"\\n\", React.createElement(_components.p, null, \"Normal block without language:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import Test from \\\"../components/test\\\"\\r\\n\\r\\nconst Layout = ({ children }) => (\\r\\n  <Test>\\r\\n    {children}\\r\\n  </Test>\\r\\n)\\r\\n\\r\\nexport default Layout\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with code highlighting:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\",\n    title: \"src/components/post.jsx\",\n    highlight: \"5-7,10\"\n  }, \"import * as React from \\\"react\\\";\\r\\n\\r\\nconst Post = ({ data: { post } }) => (\\r\\n  <Layout>\\r\\n    <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\r\\n      {post.title}\\r\\n    </Heading>\\r\\n    <p\\r\\n      sx={{\\r\\n        color: `secondary`,\\r\\n        mt: 3,\\r\\n        a: { color: `secondary` },\\r\\n        fontSize: [1, 1, 2],\\r\\n      }}\\r\\n    >\\r\\n      <span>{post.date}</span>\\r\\n      {post.tags && (\\r\\n        <React.Fragment>\\r\\n          {` — `}\\r\\n          <ItemTags tags={post.tags} />\\r\\n        </React.Fragment>\\r\\n      )}\\r\\n    </p>\\r\\n    <section\\r\\n      sx={{\\r\\n        ...CodeStyles,\\r\\n        my: 5,\\r\\n        \\\".gatsby-resp-image-wrapper\\\": { my: 5, boxShadow: `lg` },\\r\\n      }}\\r\\n    >\\r\\n      <MDXRenderer>{post.body}</MDXRenderer>\\r\\n    </section>\\r\\n  </Layout>\\r\\n);\\r\\n\\r\\nexport default Post;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block without title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Harry Potter and the Philosopher's Stone\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-text\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and without lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\"\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title and with lineNumbers:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\",\n    withLineNumbers: true\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Line highlighting without code title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\",\n    highlight: \"2,4-5\"\n  }, \"const test = 3;\\r\\nconst foo = \\\"bar\\\";\\r\\nconst harry = \\\"potter\\\";\\r\\nconst hermione = \\\"granger\\\";\\r\\nconst ron = \\\"weasley\\\";\\n\")), \"\\n\", React.createElement(_components.p, null, \"Here will \", React.createElement(_components.code, null, \"inline code\"), \" go, just inside the text. Wow!\"), \"\\n\", React.createElement(_components.p, null, \"Code block with line numbers, highlighting, language, and title:\"), \"\\n\", React.createElement(\"div\", {\n    \"data-testid\": \"code-block\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-tsx\",\n    title: \"src/components/blog.tsx\",\n    highlight: \"7-9,16\",\n    withLineNumbers: true\n  }, \"import * as React from \\\"react\\\";\\r\\n\\r\\nconst Blog = ({ posts }: PostsProps) => {\\r\\n  const { tagsPath, basePath } = useSiteMetadata();\\r\\n\\r\\n  return (\\r\\n    <Layout>\\r\\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between` }}>\\r\\n        <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\r\\n          Blog\\r\\n        </Heading>\\r\\n        <Styled.a\\r\\n          as={Link}\\r\\n          sx={{ variant: `links.secondary` }}\\r\\n          to={`/${basePath}/${tagsPath}`.replace(/\\\\/\\\\/+/g, `/`)}\\r\\n        >\\r\\n          View all tags\\r\\n        </Styled.a>\\r\\n      </Flex>\\r\\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\\r\\n    </Layout>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Blog;\\n\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"D:/Workspace/my-personal-website/content/posts/code-block-examples/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","href","withPrefix","sizePresets","large","width","height","compact","uri","view","theme","size","className","frameBorder","allowtransparency","_createMdxContent","_components","Object","assign","p","pre","code","_provideComponents","components","SpotifyPlayer","highlight","withLineNumbers","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}