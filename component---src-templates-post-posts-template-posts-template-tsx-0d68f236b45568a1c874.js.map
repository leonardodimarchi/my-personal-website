{"version":3,"file":"component---src-templates-post-posts-template-posts-template-tsx-0d68f236b45568a1c874.js","mappings":"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","sources":["webpack://@leonardodimarchi/my-personal-website/./src/components/Pagination/Pagination.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/Pagination/Pagination.tsx","webpack://@leonardodimarchi/my-personal-website/./src/components/PostFeed/PostFeed.module.scss","webpack://@leonardodimarchi/my-personal-website/./src/components/PostFeed/PostFeed.tsx","webpack://@leonardodimarchi/my-personal-website/./src/templates/Post/PostsTemplate/PostsTemplate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var disable = \"Pagination-module--disable--7e105\";\nexport var next = \"Pagination-module--next--1cab8\";\nexport var nextLink = \"Pagination-module--nextLink--532ff\";\nexport var pagination = \"Pagination-module--pagination--d61cb\";\nexport var previous = \"Pagination-module--previous--4a76b\";\nexport var previousLink = \"Pagination-module--previousLink--5590d\";","import React from \"react\";\n\nimport classNames from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport { PAGINATION } from \"@/constants\";\n\nimport * as styles from \"./Pagination.module.scss\";\n\ntype Props = {\n  prevPagePath: string;\n  nextPagePath: string;\n  hasNextPage: boolean;\n  hasPrevPage: boolean;\n};\n\nconst Pagination = ({\n  prevPagePath,\n  nextPagePath,\n  hasNextPage,\n  hasPrevPage,\n}: Props) => {\n  const prevClassName = classNames(styles.previousLink, {\n    [styles.disable]: !hasPrevPage,\n  });\n\n  const nextClassName = classNames(styles.nextLink, {\n    [styles.disable]: !hasNextPage,\n  });\n\n  return (\n    <div className={styles.pagination}>\n      <div className={styles.previous}>\n        <Link\n          rel=\"prev\"\n          to={hasPrevPage ? prevPagePath : \"/\"}\n          className={prevClassName}\n        >\n          {PAGINATION.PREV_PAGE}\n        </Link>\n      </div>\n      <div className={styles.next}>\n        <Link\n          rel=\"next\"\n          to={hasNextPage ? nextPagePath : \"/\"}\n          className={nextClassName}\n        >\n          {PAGINATION.NEXT_PAGE}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport var category = \"PostFeed-module--category--63d14\";\nexport var description = \"PostFeed-module--description--ad18c\";\nexport var divider = \"PostFeed-module--divider--4e915\";\nexport var feed = \"PostFeed-module--feed--a7846\";\nexport var item = \"PostFeed-module--item--1fc42\";\nexport var link = \"PostFeed-module--link--61e6d\";\nexport var meta = \"PostFeed-module--meta--9aa05\";\nexport var more = \"PostFeed-module--more--707a9\";\nexport var time = \"PostFeed-module--time--8e743\";\nexport var title = \"PostFeed-module--title--91056\";","import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport { Edge } from \"@/types\";\n\nimport * as styles from \"./PostFeed.module.scss\";\n\ntype Props = {\n  edges: Array<Edge>;\n};\n\nconst PostFeed: React.FC<Props> = ({ edges }: Props) => (\n  <div className={styles.feed}>\n    {edges.map((edge) => (\n      <div className={styles.item} key={edge.node.fields.slug}>\n        <div className={styles.meta}>\n          <time\n            className={styles.time}\n            dateTime={new Date(edge.node.frontmatter.date).toLocaleDateString(\n              \"en-US\",\n              { year: \"numeric\", month: \"long\", day: \"numeric\" },\n            )}\n          >\n            {new Date(edge.node.frontmatter.date).toLocaleDateString(\"en-US\", {\n              year: \"numeric\",\n              month: \"long\",\n            })}\n          </time>\n          <span className={styles.divider} />\n          <span className={styles.category}>\n            <Link to={edge.node.fields.categorySlug} className={styles.link}>\n              {edge.node.frontmatter.category}\n            </Link>\n          </span>\n        </div>\n        <h2 className={styles.title}>\n          <Link\n            className={styles.link}\n            to={edge.node.frontmatter?.slug || edge.node.fields.slug}\n          >\n            {edge.node.frontmatter.title}\n          </Link>\n        </h2>\n        <p className={styles.description}>\n          {edge.node.frontmatter.description}\n        </p>\n        <Link\n          className={styles.more}\n          to={edge.node.frontmatter?.slug || edge.node.fields.slug}\n        >\n          Read\n        </Link>\n      </div>\n    ))}\n  </div>\n);\n\nexport default PostFeed;\n","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { PostFeed } from \"@/components/PostFeed\";\nimport { Layout } from \"@/components/Layout\";\nimport { Meta } from \"@/components/Meta\";\nimport { Page } from \"@/components/Page\";\nimport { Pagination } from \"@/components/Pagination\";\nimport { Sidebar } from \"@/components/Sidebar\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { AllMarkdownRemark, PageContext } from \"@/types\";\n\ninterface Props {\n  data: {\n    allMarkdownRemark: AllMarkdownRemark;\n  };\n  pageContext: PageContext;\n}\n\nconst PostsTemplate: React.FC<Props> = ({ data, pageContext }: Props) => {\n  const { pagination } = pageContext;\n  const { hasNextPage, hasPrevPage, prevPagePath, nextPagePath } = pagination;\n\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <Layout>\n      <Sidebar isIndex />\n      <Page>\n        <PostFeed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostsTemplate($limit: Int!, $offset: Int!) {\n    allMarkdownRemark(\n      limit: $limit\n      skip: $offset\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            categorySlug\n            slug\n          }\n          frontmatter {\n            description\n            category\n            title\n            date\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: React.FC<Props> = ({ pageContext }) => {\n  const { title, subtitle } = useSiteMetadata();\n  const {\n    pagination: { currentPage: page },\n  } = pageContext;\n  const pageTitle = page > 0 ? `Posts - Page ${page} - ${title}` : title;\n\n  return <Meta title={pageTitle} description={subtitle} />;\n};\n\nexport default PostsTemplate;\n"],"names":["disable","prevPagePath","nextPagePath","hasNextPage","hasPrevPage","prevClassName","classNames","styles","nextClassName","React","className","Link","rel","to","PAGINATION","edges","map","edge","key","node","fields","slug","dateTime","Date","frontmatter","date","toLocaleDateString","year","month","day","categorySlug","category","_edge$node$frontmatte","title","description","_edge$node$frontmatte2","Head","pageContext","useSiteMetadata","subtitle","page","pagination","currentPage","pageTitle","Meta","data","allMarkdownRemark","Layout","Sidebar","isIndex","Page","PostFeed","Pagination"],"sourceRoot":""}